package main

import (
	"net/http"

	docs "article/docs" // docs is generated by Swag CLI, you have to import it.
	"article/handlers"
	"article/models"
	"article/storage/inmemory"

	"github.com/gin-gonic/gin"
	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"
)

// @contact.name  API Article
// @contact.url   https://john.doe.com
// @contact.email john.doe@swagger.io
// @license.name  Apache 2.0
// @license.url   http://www.apache.org/licenses/LICENSE-2.0.html
func main() {
	// programmatically set swagger info
	docs.SwaggerInfo.Title = "Swagger Example API"
	docs.SwaggerInfo.Description = "This is a sample server Petstore server."
	docs.SwaggerInfo.Version = "2.0"
	im := inmemory.Inmemory{
		Db: &inmemory.DB{},
	}
	err := im.AddAuthor("eb9eb7f9-47ca-4f75-815b-cd5c901b4df2", models.CreateAuthorModel{
		Firstname: "John",
		Lastname:  "Doe",
	})
	if err != nil {
		panic(err)
	}

	err = im.AddArticle("b6c46a35-d78b-4f1d-80fe-8d617f83ec6c", models.CreateArticleModel{
		Content: models.Content{
			Title: "Lorem",
			Body:  "Impsume smth smth smthsmth",
		},
		AuthorID: "eb9eb7f9-47ca-4f75-815b-cd5c901b4df2",
	})
	if err != nil {
		panic(err)
	}

	r := gin.Default()

	r.GET("/ping", func(c *gin.Context) {
		c.JSON(http.StatusOK, gin.H{
			"message": "pong",
		})
	})
	h := handlers.Handler{
		IM: im,
	}
	v1 := r.Group("/v2")
	{
		v1.POST("/article", h.CreateArticle)
		v1.GET("/article/:id", h.GetArticleByID)
		v1.GET("/article", h.GetArticleList)
		v1.PUT("/article", h.UpdateArticle)
		v1.DELETE("/article/:id", h.DeleteArticle)

		v1.POST("/author", h.CreateAuthor)
		v1.GET("/author/:id", h.GetAuthorByID)
		v1.GET("/author", h.GetAuthorList)
		v1.PUT("/author", h.UpdateAuthor)
		v1.DELETE("/author/:id", h.DeleteAuthor)
	}

	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	r.Run(":3000") // listen and serve on 0.0.0.0:8080 (for windows "localhost:8080")
}
